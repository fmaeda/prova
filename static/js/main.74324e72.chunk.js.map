{"version":3,"sources":["store/index.ts","store/configureStore.ts","serviceWorker.ts","index.tsx","store/auth/index.ts","styles/index.ts","store/questao/index.ts","store/steps/index.ts","components/Logo/index.tsx","pages/ProvaPage/styled.ts","components/ProgressButton/styled.ts","components/ProgressButton/index.tsx","components/IconButton/styled.ts","components/IconButton/index.tsx","components/BottomBar/styled.ts","components/ProgressBar/styled.ts","components/ProgressBar/index.tsx","components/BottomBar/index.tsx","components/UserDetails/styled.ts","components/UserDetails/index.tsx","components/TimerProva/styled.ts","components/TimerProva/index.tsx","pages/ProvaPage/index.tsx","pages/index.tsx","configureInterceptors.ts","pages/WelcomePage/styled.ts","components/Card/styled.ts","components/Card/index.tsx","components/Countdown/styled.ts","components/Countdown/CountdownItem.tsx","components/Countdown/index.tsx","components/Button/styled.ts","components/Button/index.tsx","pages/WelcomePage/index.tsx"],"names":["allReducers","steps","stepReducer","questao","questaoReducer","auth","authReducer","rootReducer","persistReducer","key","storage","sessionStorage","blacklist","combineReducers","middlewares","thunk","Boolean","window","location","hostname","match","history","createHashHistory","hashType","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","configureStore","configureInterceptors","AppComponent","MainRoute","ReactDOM","render","theme","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","AuthReducer","token","this","draftState","dataFinalProva","serverDate","timeDiffMillis","Date","now","getTime","cpf","nome","inscricao","ImmerReducer","authActions","createActionCreators","createReducerFunction","name","color","primary","secondary","red","green","blue","darkBlue","darkGray","lightSilver","darkSilver","silver","error","translucentWhite","translucentBlack","size","font","normal","big","icon","QuestaoReducer","questaoAtual","alternativa","alternativaSelecionada","questaoActions","StepsReducer","idx","findIndex","step","total","concluidos","length","stepActions","Container","styled","div","Header","Title","Content","disabled","IconContainer","silent","Check","motion","path","ProgressButton","handleClick","props","onClick","locked","sent","console","log","countdown","minutes","seconds","data-tip","data-event","data-iscapture","viewBox","style","width","height","fill","strokeWidth","stroke","d","strokeDasharray","transition","duration","initial","pathLength","animate","toString","padStart","React","Component","IconButton","Icon","BarContainer","TimerContainer","ProgressContainer","MainButtonContainer","Background","Bar","progress","ProgressBar","fillColor","BottomBar","state","showNotifications","minFinished","finished","maxCountdownRef","createRef","toggleNotifications","setState","renderProgressCountdown","tempo","prog","handleTick","handleSend","current","isPaused","pause","inicio","parseISO","horaInicio","minDate","add","tempoMinimo","maxDate","tempoMaximo","date","renderer","onTick","onComplete","ref","FaInfoCircle","FaBell","FaBellSlash","place","effect","globalEventOff","connect","Label","UserDetails","CountdownContainer","TimeBox","TimerProva","renderCountdown","hours","endDate","addMilliseconds","ProvaRoute","collapsed","handleStartClick","increment","setQuestao","setAlternativa","setDataFinalProva","enunciado","toISOString","alternativas","Logo","flex","component","ProvaPage","WelcomePage","hot","module","axios","interceptors","response","use","resp","headers","dispatch","setToken","updateClientTimeDiff","erro","data","request","responseType","JSON","parse","Buffer","from","extractErro","status","url","responseURL","indexOf","push","Promise","reject","config","getState","ButtonContainer","background","Card","children","ItemContainer","FlipPanel","label","value","CountdownComponent","days","completed","Button","opacity","y","exit","WelcomeRoute","handleComplete","handleTutorialClick","Countdown"],"mappings":"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","file":"static/js/main.74324e72.chunk.js","sourcesContent":["import { StateType } from 'typesafe-actions';\n\nimport { stepReducer } from 'store/steps';\nimport { questaoReducer } from 'store/questao';\nimport { authReducer } from 'store/auth';\n\nconst allReducers = {\n  steps: stepReducer,\n  questao: questaoReducer,\n  auth: authReducer,\n};\n\nexport type RootState = StateType<typeof allReducers>;\n\nexport default allReducers;\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  combineReducers,\n  createStore,\n  Store,\n  Reducer,\n  applyMiddleware,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport sessionStorage from 'redux-persist/lib/storage/session';\n\nimport allReducers, { RootState } from 'store';\n\nconst rootReducer = (persistReducer(\n  {\n    key: 'ibama',\n    storage: sessionStorage,\n    blacklist: ['layer'],\n  },\n  combineReducers({ ...allReducers }),\n) as unknown) as Reducer<RootState>;\n\nconst middlewares = [thunk];\n\nexport default () => {\n  const store: Store<RootState> = createStore<RootState, any, any, any>(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middlewares)),\n  );\n\n  const persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'emotion-theming';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { AppContainer } from 'react-hot-loader';\nimport { Router } from 'react-router-dom';\nimport './index.css';\nimport configureStore from 'store/configureStore';\nimport { theme } from 'styles';\nimport { createHashHistory } from 'history';\n\nimport MainRoute from 'pages';\n\nimport * as serviceWorker from './serviceWorker';\nimport configureInterceptors from './configureInterceptors';\n\nconst history = createHashHistory({ hashType: 'hashbang' });\n\nconst { store, persistor } = configureStore();\nconfigureInterceptors(store, history);\n\nconst render = (AppComponent: React.ComponentType) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <PersistGate loading={null} persistor={persistor}>\n          <AppContainer>\n            <Router history={history}>\n              <AppComponent />\n            </Router>\n          </AppContainer>\n        </PersistGate>\n      </ThemeProvider>\n    </Provider>,\n    document.getElementById('root') as HTMLElement,\n  );\n};\n\nrender(MainRoute);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n  ImmerReducer,\n  createActionCreators,\n  createReducerFunction,\n} from 'immer-reducer';\n\ntype State = {\n  token: string | null;\n  nome: string;\n  cpf: string;\n  inscricao: string;\n  dataFinalProva: string | null;\n  timeDiffMillis: number;\n};\n\nconst DEFAULT_STATE: State = {\n  token: null,\n  nome: '',\n  cpf: '',\n  inscricao: '',\n  timeDiffMillis: 0,\n  dataFinalProva: null,\n};\n\nclass AuthReducer extends ImmerReducer<State> {\n  setToken(token: string) {\n    this.draftState.token = token;\n  }\n\n  setDataFinalProva(dataFinalProva: string) {\n    this.draftState.dataFinalProva = dataFinalProva;\n  }\n\n  updateClientTimeDiff(serverDate: string | null) {\n    this.draftState.timeDiffMillis = serverDate\n      ? Date.now() - new Date(serverDate).getTime()\n      : 0;\n  }\n\n  setUserDetails({\n    cpf,\n    nome,\n    inscricao,\n  }: Pick<State, 'cpf' | 'nome' | 'inscricao'>) {\n    this.draftState.cpf = cpf;\n    this.draftState.nome = nome;\n    this.draftState.inscricao = inscricao;\n  }\n}\n\nexport const authActions = createActionCreators(AuthReducer);\nexport const authReducer = createReducerFunction(AuthReducer, DEFAULT_STATE);\n","import styled, { CreateStyled } from '@emotion/styled/macro';\ntype Theme = {\n  name: string;\n  color: {\n    primary: string;\n    secondary: string;\n    red: string;\n    green: string;\n    blue: string;\n    darkBlue: string;\n    darkGray: string;\n    lightSilver: string;\n    darkSilver: string;\n    translucentWhite: string;\n    translucentBlack: string;\n    silver: string;\n    error: string;\n  };\n  size: {\n    font: {\n      normal: string;\n      big: string;\n    };\n    icon: {\n      normal: string;\n      big: string;\n    };\n  };\n};\n\nexport const theme: Theme = {\n  name: 'default',\n  color: {\n    primary: '#2C68BD',\n    secondary: '#e91e63',\n    red: '#A6392F',\n    green: '#0F8C3C',\n    blue: '#1A95C0',\n    darkBlue: '#0F4098',\n    darkGray: '#4A4A4A',\n    lightSilver: '#F7F7F7',\n    darkSilver: '#A0A0A0',\n    silver: '#ededed',\n    error: 'red',\n    translucentWhite: 'rgba(255, 255, 255, 0.5)',\n    translucentBlack: 'rgba(0, 0, 0, 0.5)',\n  },\n  size: {\n    font: {\n      normal: '11px',\n      big: '14px',\n    },\n    icon: {\n      normal: '14px',\n      big: '16px',\n    },\n  },\n};\n\nexport default styled as CreateStyled<Theme>;\n","import {\n  ImmerReducer,\n  createActionCreators,\n  createReducerFunction,\n} from 'immer-reducer';\n\nimport { Questao, Alternativa } from 'model/questao';\n\ntype State = {\n  questaoAtual: Questao | null;\n  alternativaSelecionada: Alternativa | null;\n};\n\nconst DEFAULT_STATE: State = {\n  questaoAtual: null,\n  alternativaSelecionada: null,\n};\n\nclass QuestaoReducer extends ImmerReducer<State> {\n  setQuestao(questao: Questao) {\n    this.draftState.questaoAtual = questao;\n  }\n\n  setAlternativa(alternativa: Alternativa | null) {\n    this.draftState.alternativaSelecionada = alternativa;\n  }\n}\n\nexport const questaoActions = createActionCreators(QuestaoReducer);\nexport const questaoReducer = createReducerFunction(\n  QuestaoReducer,\n  DEFAULT_STATE,\n);\n","import {\n  ImmerReducer,\n  createActionCreators,\n  createReducerFunction,\n} from 'immer-reducer';\n\nimport { Disciplina, Step } from 'model/disciplina';\n\ntype State = Step[];\n\nconst DEFAULT_STATE: State = [];\n\nclass StepsReducer extends ImmerReducer<State> {\n  setSteps(steps: Step[]) {\n    this.draftState = steps;\n  }\n\n  increment() {\n    const idx = this.draftState.findIndex(\n      (step) => step.total > 0 && step.total !== step.concluidos,\n    );\n    if (idx >= 0) {\n      const concluidos = ++this.draftState[idx].concluidos;\n      if (\n        concluidos === this.draftState[idx].total &&\n        idx < this.draftState.length - 1\n      ) {\n        this.draftState[idx + 1].total = 10;\n        this.draftState[idx + 1].concluidos = 1;\n      }\n    }\n  }\n}\n\nexport const stepActions = createActionCreators(StepsReducer);\nexport const stepReducer = createReducerFunction(StepsReducer, DEFAULT_STATE);\nexport const stepSelectors = {\n  currentStep: (state: State) =>\n    state.find(({ total, concluidos }) => total > 0 && total !== concluidos),\n};\n","import React from 'react';\nimport styled from 'styles';\n\nimport { IoLogoApple } from 'react-icons/io';\n\nconst Container = styled.div`\n  color: #ea3856;\n  font-size: 40px;\n  filter: drop-shadow(2px 2px rgba(0, 0, 0, 0.5));\n  margin: 0 20px 0 12px;\n  /* border: solid red; */\n`;\n\nexport default () => (\n  <Container>\n    <IoLogoApple />\n  </Container>\n);\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: stretch;\n  /* background: #2d2d2d; */\n  background: linear-gradient(#fff, #ccc);\n  flex: 1;\n  @media only screen and (min-width: 768px) {\n    margin: 40px 0;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-self: stretch;\n  align-items: center;\n  flex: 1;\n  background: linear-gradient(#bbb, #777);\n  /* overflow: hidden; */\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  align-self: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 9;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* background: linear-gradient(#fff, #ccc); */\n`;\n\nexport const CountdownContainer = styled.div`\n  margin: 40px;\n`;\n","import styled from 'styles';\nimport { motion } from 'framer-motion';\n\ntype Props = {\n  disabled?: boolean;\n};\nexport const Container = styled.div<Props>`\n  transition: all 0.15s ease-in-out;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 900px;\n  border: 8px solid whitesmoke;\n  width: 60px;\n  height: 60px;\n  overflow: hidden;\n  background: #ddd;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  color: ${({ disabled }) => (disabled ? 'rgba(0, 0, 0, 0.2)' : '#ea3856')};\n  font-size: ${({ disabled }) => (disabled ? '32px' : '24px')};\n  font-weight: bold;\n\n  :active {\n    ${({ disabled }) =>\n      !disabled &&\n      `\n      box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.2);\n    `};\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n`;\n\nexport const ProgressContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-self: stretch;\n  min-height: 10px;\n  background: rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n`;\n\ntype SilentProps = {\n  silent?: boolean;\n};\nexport const IconContainer = styled.div<SilentProps>`\n  display: flex;\n  align-self: stretch;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  ${({ silent }) =>\n    !silent &&\n    `\n    > svg {\n      margin: 8px 0 -4px;\n      flex: 1;\n    }\n    > div {\n      margin: 4px 0 8px;\n      font-weight: 600;\n      font-size: 10px;\n      color: gray;\n    }\n  `};\n`;\n\nexport const CounterContainer = styled.div`\n  display: flex;\n  /* flex: 1; */\n  align-self: stretch;\n  flex-direction: row;\n  border: solid red;\n`;\n\nexport const Check = styled(motion.path)``;\n","import React from 'react';\n\nimport { FaArrowRight, FaLock } from 'react-icons/fa';\nimport { MdTimer, MdSend } from 'react-icons/md';\n\nimport { Container, IconContainer, Content, Check } from './styled';\n\ntype Props = {\n  countdown: number;\n  minutes: number;\n  seconds: number;\n  silent?: boolean;\n  disabled?: boolean;\n  locked?: boolean;\n  sent?: boolean;\n  onClick: (disabled: boolean, locked: boolean) => void;\n};\n\nclass ProgressButton extends React.Component<Props> {\n  handleClick = () => {\n    const { onClick, disabled, locked, sent } = this.props;\n    !sent && onClick(!!disabled, !!locked);\n    console.log('handleClick');\n  };\n\n  render() {\n    const {\n      disabled,\n      countdown,\n      locked,\n      sent,\n      minutes,\n      seconds,\n      silent,\n    } = this.props;\n\n    return (\n      <Container\n        disabled={disabled || sent}\n        onClick={this.handleClick}\n        data-tip={\n          locked ? 'Tempo esgotado' : disabled ? 'Aguarde o tempo mínimo' : ''\n        }\n        data-event=\"click focus\"\n        data-iscapture={!locked && !disabled && !sent}\n      >\n        <Content>\n          {!!sent ? (\n            <svg viewBox=\"0 0 50 50\" style={{ width: '100%', height: '100%' }}>\n              <Check\n                fill=\"none\"\n                strokeWidth={3}\n                stroke={'hsl(100, 50%, 50%)'}\n                d=\"M14,26 L 22,33 L 35,16\"\n                strokeDasharray=\"0 1\"\n                transition={{ duration: 0.7 }}\n                initial={{ pathLength: 0 }}\n                animate={{ pathLength: 1 }}\n                // onAnimationEnd={onComplete}\n              />\n            </svg>\n          ) : (\n            <IconContainer silent={silent || locked}>\n              {locked ? (\n                <FaLock />\n              ) : countdown > 0 ? (\n                <span>{countdown}</span>\n              ) : (\n                <>\n                  {disabled ? <MdTimer /> : <MdSend />}\n                  {!silent && (\n                    <div>{`${minutes\n                      .toString()\n                      .padStart(2, '0')}:${seconds\n                      .toString()\n                      .padStart(2, '0')}`}</div>\n                  )}\n                </>\n              )}\n              {}\n              {/* {collapsed ? <span>Enviar</span> : <span>30</span>} */}\n            </IconContainer>\n          )}\n        </Content>\n        {/* <ReactTooltip /> */}\n      </Container>\n    );\n  }\n}\n\nexport default ProgressButton;\n","import styled from 'styles';\n\ntype Props = {\n  disabled?: boolean;\n};\nexport const Container = styled.div<Props>`\n  display: flex;\n  > svg {\n    font-size: 28px;\n  }\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n`;\n","import React from 'react';\n\nimport { Container } from './styled';\n\ntype Props = {\n  icon: React.ComponentType;\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nclass IconButton extends React.Component<Props> {\n  render() {\n    const { icon: Icon, onClick, disabled } = this.props;\n\n    return (\n      <Container onClick={() => !disabled && onClick()} disabled={disabled}>\n        <Icon />\n      </Container>\n    );\n  }\n}\n\nexport default IconButton;\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  /* border: solid red; */\n`;\n\nexport const BarContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 20px 0;\n  background: whitesmoke;\n  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.2));\n  > div {\n    flex: 1;\n    /* border: solid red; */\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const TimerContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  > span {\n    width: 70px;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: flex-end;\n  min-height: 2px;\n  background: silver;\n  > div {\n    text-align: center;\n    margin-bottom: 2px;\n  }\n  /* border: solid lime; */\n`;\n\nexport const MainButtonContainer = styled.div`\n  position: absolute;\n  left: 50%;\n  top: -30px;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: gray;\n`;\n","import styled from 'styles';\n\ntype ColorProps = {\n  color: string;\n};\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  /* height: 8px; */\n  /* width: 220px; */\n`;\n\nexport const Background = styled.div<ColorProps>`\n  position: absolute;\n  background: ${({ color }) => color};\n  left: 0;\n  bottom: 0;\n  right: 0;\n  top: 0;\n`;\n\ntype BarProps = ColorProps & {\n  progress: number;\n};\nexport const Bar = styled.div<BarProps>`\n  transition: all 0.2s ease-in-out;\n  position: absolute;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background: ${({ color }) => color};\n  right: ${({ progress }) => `${100 - progress}%`};\n  height: 2px;\n  /* border: solid pink; */\n`;\n","import React from 'react';\n\nimport { Container, Background, Bar } from './styled';\n\ntype Props = {\n  fillColor: string;\n  progress: number;\n};\n\nclass ProgressBar extends React.Component<Props> {\n  render() {\n    const { fillColor, progress } = this.props;\n\n    return (\n      <Container>\n        <Background color=\"gray\" />\n        <Bar color={fillColor} progress={progress} />\n      </Container>\n    );\n  }\n}\n\nexport default ProgressBar;\n","import React from 'react';\n\nimport { add, parseISO } from 'date-fns';\nimport { FaBell, FaInfoCircle, FaBellSlash } from 'react-icons/fa';\n\nimport ProgressButton from 'components/ProgressButton';\nimport IconButton from 'components/IconButton';\nimport ChatBalloon from 'components/ChatBalloon';\n\nimport {\n  Container,\n  BarContainer,\n  TimerContainer,\n  ProgressContainer,\n  MainButtonContainer,\n} from './styled';\nimport ProgressBar from 'components/ProgressBar';\nimport Countdown, {\n  CountdownRenderProps,\n  CountdownTimeDelta,\n} from 'react-countdown';\nimport { RootState } from 'store';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = ({ questao: { questaoAtual } }: RootState) => ({\n  questaoAtual,\n});\n\ntype Props = {} & ReturnType<typeof mapStateToProps>;\n\ntype State = {\n  showNotifications: boolean;\n  minFinished: boolean;\n  countdown: number;\n  finished: boolean;\n  sent: boolean;\n  minutes: number;\n  seconds: number;\n};\n\nclass BottomBar extends React.Component<Props, State> {\n  state: State = {\n    showNotifications: true,\n    minFinished: false,\n    countdown: 0,\n    finished: false,\n    sent: false,\n    minutes: 0,\n    seconds: 0,\n  };\n\n  maxCountdownRef = React.createRef<Countdown>();\n\n  toggleNotifications = () => {\n    this.setState(({ showNotifications }) => ({\n      showNotifications: !showNotifications,\n    }));\n  };\n\n  renderProgressCountdown = (tempo: number, showNotifications: boolean) => ({\n    minutes,\n    seconds,\n  }: CountdownRenderProps) => {\n    const totalSecondsRemaining = minutes * 60 + seconds;\n    const prog = ((tempo - totalSecondsRemaining) / tempo) * 100;\n    // console.log('prog', prog, totalSecondsRemaining);\n    return showNotifications ? (\n      <ProgressBar fillColor=\"#ea3856\" progress={prog} />\n    ) : null;\n  };\n\n  handleTick = (countdown: boolean) => ({\n    minutes,\n    seconds,\n  }: CountdownTimeDelta) => {\n    const total = minutes * 60 + seconds;\n    this.setState({ minutes, seconds });\n    if (countdown && total <= 10) {\n      this.setState({ countdown: total });\n    }\n  };\n\n  handleSend = (disabled: boolean, locked: boolean) => {\n    if (!disabled && !locked) {\n      console.log('sent');\n      if (!this.maxCountdownRef.current?.isPaused()) {\n        this.maxCountdownRef.current?.pause();\n      }\n      this.setState({ sent: true });\n    } else {\n      console.log('disabled/locked', disabled, locked);\n    }\n  };\n\n  render() {\n    const {\n      showNotifications,\n      minFinished,\n      countdown,\n      finished,\n      sent,\n      minutes,\n      seconds,\n    } = this.state;\n    const { questaoAtual } = this.props;\n\n    if (!questaoAtual) {\n      return null;\n    }\n    const inicio = parseISO(questaoAtual.horaInicio);\n    const minDate = add(inicio, { seconds: questaoAtual.tempoMinimo });\n    const maxDate = add(inicio, { seconds: questaoAtual.tempoMaximo });\n\n    return (\n      <Container>\n        <TimerContainer>\n          <ProgressContainer>\n            {/* <ChatBalloon hidden={!showNotifications}>\n              {showNotifications && `Min: ${questaoAtual.tempoMinimo}s`}\n            </ChatBalloon> */}\n            <Countdown\n              key=\"minCountdown\"\n              date={minDate}\n              now={() => Date.now()}\n              renderer={this.renderProgressCountdown(\n                questaoAtual.tempoMinimo,\n                showNotifications,\n              )}\n              onTick={this.handleTick(false)}\n              onComplete={() =>\n                this.setState({ minFinished: true, minutes: 0, seconds: 0 })\n              }\n            />\n          </ProgressContainer>\n          <span />\n          <ProgressContainer>\n            {/* <ChatBalloon hidden={!showNotifications}>\n              {showNotifications && `Max: ${questaoAtual.tempoMaximo}s`}\n            </ChatBalloon> */}\n            {!!minFinished ? (\n              <Countdown\n                key=\"maxCountdown\"\n                date={maxDate}\n                now={() => Date.now()}\n                renderer={this.renderProgressCountdown(\n                  questaoAtual.tempoMaximo - questaoAtual.tempoMinimo,\n                  showNotifications,\n                )}\n                onTick={this.handleTick(true)}\n                ref={this.maxCountdownRef}\n                onComplete={() => this.setState({ finished: true })}\n              />\n            ) : (\n              showNotifications && (\n                <ProgressBar fillColor=\"#ea3856\" progress={0} />\n              )\n            )}\n          </ProgressContainer>\n        </TimerContainer>\n        <BarContainer>\n          <IconButton icon={FaInfoCircle} onClick={() => null} disabled />\n          {/* <div /> */}\n          {/* <div /> */}\n          <MainButtonContainer>\n            <ProgressButton\n              onClick={this.handleSend}\n              countdown={countdown}\n              disabled={!minFinished || finished}\n              locked={finished}\n              sent={sent}\n              minutes={minutes}\n              seconds={seconds}\n              silent={!showNotifications}\n            />\n          </MainButtonContainer>\n          <IconButton\n            icon={showNotifications ? FaBell : FaBellSlash}\n            onClick={this.toggleNotifications}\n          />\n        </BarContainer>\n        <ReactTooltip place=\"top\" effect=\"solid\" globalEventOff=\"click\" />\n      </Container>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(BottomBar);\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  /* border: solid red; */\n  > span {\n    font-weight: bold;\n    margin: 4px 0;\n  }\n`;\n\nexport const Label = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 18px;\n  font-weight: 300;\n`;\n","import React from 'react';\n\nimport { Container, Label } from './styled';\n\ntype Props = {\n  cpf: string;\n  nome: string;\n};\n\nclass UserDetails extends React.Component<Props> {\n  render() {\n    const { cpf, nome } = this.props;\n\n    return (\n      <Container>\n        <Label>{nome}</Label>\n        <span>{cpf}</span>\n        {/* <Label>CPF: {cpf}</Label> */}\n      </Container>\n    );\n  }\n}\n\nexport default UserDetails;\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  /* flex: 1; */\n  align-self: stretch;\n  flex-direction: row;\n  align-items: center;\n  margin: 12px;\n  font-size: 18px;\n  font-weight: 300;\n\n  > svg {\n    font-size: 24px;\n    color: rgba(255, 255, 255, 0.5);\n    margin: 0 12px;\n  }\n\n  /* border: solid red; */\n`;\n\nexport const CountdownContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const TimeBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  min-width: 24px;\n`;\n","import React from 'react';\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\n\nimport { connect } from 'react-redux';\nimport { GiSandsOfTime } from 'react-icons/gi';\n\nimport { Container, CountdownContainer, TimeBox } from './styled';\nimport { RootState } from 'store';\nimport { addMilliseconds, add } from 'date-fns';\n\nconst mapStateToProps = ({\n  auth: { timeDiffMillis, dataFinalProva },\n}: RootState) => ({\n  timeDiffMillis,\n  dataFinalProva,\n});\n\ntype Props = {} & ReturnType<typeof mapStateToProps>;\n\nclass TimerProva extends React.Component<Props> {\n  renderCountdown = ({ hours, minutes, seconds }: CountdownRenderProps) => {\n    // console.log('data', hours);\n    if (hours > 0) {\n      // apresentar hh:mm\n      return (\n        <CountdownContainer>\n          <TimeBox>{hours.toString().padStart(2, '0')}</TimeBox>:\n          <TimeBox>{minutes.toString().padStart(2, '0')}</TimeBox>\n        </CountdownContainer>\n      );\n    }\n    if (minutes > 0) {\n      return (\n        <CountdownContainer>\n          <TimeBox>{hours.toString().padStart(2, '0')}</TimeBox>:\n          <TimeBox>{minutes.toString().padStart(2, '0')}</TimeBox>.\n          <TimeBox>{seconds.toString().padStart(2, '0')}</TimeBox>\n        </CountdownContainer>\n      );\n    }\n    // apresentar ss em destaque\n    return null;\n  };\n\n  render() {\n    const { timeDiffMillis, dataFinalProva } = this.props;\n    if (!dataFinalProva) {\n      return '';\n    }\n\n    const endDate = addMilliseconds(new Date(dataFinalProva), timeDiffMillis);\n    return (\n      <Container>\n        <GiSandsOfTime />\n        <Countdown\n          key=\"totalCountdown\"\n          date={endDate}\n          now={() => Date.now()}\n          renderer={this.renderCountdown}\n          // onTick={this.handleTick(true)}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(TimerProva);\n","import React from 'react';\n\nimport { RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Logo from 'components/Logo';\nimport { Container, Content, Title, Header } from './styled';\nimport { stepActions } from 'store/steps';\nimport BottomBar from 'components/BottomBar';\nimport { questaoActions } from 'store/questao/index';\nimport UserDetails from 'components/UserDetails';\nimport TimerProva from 'components/TimerProva/index';\nimport { authActions } from 'store/auth';\nimport { add } from 'date-fns';\n\ntype Props = {\n  increment: typeof stepActions.increment;\n  setQuestao: typeof questaoActions.setQuestao;\n  setAlternativa: typeof questaoActions.setAlternativa;\n  setDataFinalProva: typeof authActions.setDataFinalProva;\n} & RouteComponentProps;\n\ntype State = {\n  collapsed: boolean;\n};\nclass ProvaRoute extends React.Component<Props, State> {\n  state: State = {\n    collapsed: false,\n  };\n\n  componentDidMount() {\n    const { setQuestao, setAlternativa, setDataFinalProva } = this.props;\n    setQuestao({\n      enunciado: 'Questao teste...',\n      horaInicio: new Date().toISOString(),\n      tempoMinimo: 20, // 20s\n      tempoMaximo: 60, // 60s\n      alternativas: [],\n    });\n    setAlternativa(null);\n    setDataFinalProva(add(new Date(), { hours: 2 }).toISOString());\n  }\n\n  handleStartClick = () => {\n    // const { history } = this.props;\n    // history.push('/prova');\n    const { increment } = this.props;\n    increment();\n  };\n\n  render() {\n    return (\n      <Container>\n        <Header>\n          <Logo />\n          {/* <Breadcrumbs collapsed /> */}\n          <UserDetails nome=\"Fabiano Maeda\" cpf=\"123.456.789-09\" />\n          <div style={{ flex: 1 }} />\n          <TimerProva />\n        </Header>\n        <Content>\n          <Title>\n            <h2>Seção...</h2>\n          </Title>\n          <span>Questão...</span>\n          <span>Alternativas...</span>\n        </Content>\n        <BottomBar />\n      </Container>\n    );\n  }\n}\n\nexport default connect(null, {\n  increment: stepActions.increment,\n  setQuestao: questaoActions.setQuestao,\n  setAlternativa: questaoActions.setAlternativa,\n  setDataFinalProva: authActions.setDataFinalProva,\n})(ProvaRoute);\n","import { hot } from 'react-hot-loader';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ProvaPage from './ProvaPage';\nimport WelcomePage from './WelcomePage';\n\nclass MainRoute extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/prova\" component={ProvaPage} />\n        <Route path=\"/welcome\" component={WelcomePage} />\n        <Route path=\"/\" component={ProvaPage} />\n      </Switch>\n    );\n  }\n}\n\nexport default hot(module)(MainRoute);\n","// @flow\nimport axios from 'axios';\nimport { Store } from 'redux';\nimport { RootState } from 'store';\nimport { History } from 'history';\nimport { authActions } from 'store/auth';\n// import { tokenActions } from 'store/token';\n// import { serverActions } from 'store/server';\n\nconst extractErro = (response: any) => {\n  if (!response || !response.data || !response.data.erro) {\n    return 'UNKNOWN_SERVER_ERROR';\n  }\n\n  const {\n    data: { erro },\n  } = response;\n\n  if (response.request.responseType === 'arraybuffer') {\n    return JSON.parse(Buffer.from(response.data).toString('utf8')).erro;\n  }\n  return erro;\n};\n\nexport default (store: Store<RootState>, history: History) => {\n  axios.interceptors.response.use(\n    (resp) => {\n      const { headers } = resp;\n      if (headers) {\n        const token = headers['x-auth-token'];\n        if (token) {\n          store.dispatch(authActions.setToken(token));\n        }\n\n        const serverDate = headers['x-server-date'];\n        if (serverDate) {\n          store.dispatch(authActions.updateClientTimeDiff(serverDate));\n        }\n      }\n      return resp;\n    },\n    (error) => {\n      const erro = extractErro(error.response);\n      if (error.response) {\n        const {\n          status,\n          request: { responseURL },\n        } = error.response;\n\n        const url = responseURL as string;\n        if (status === 401) {\n          if (\n            ((url.indexOf('/s/inscricao/') >= 0 &&\n              url.indexOf('/s/inscricao/iniciar') === -1) ||\n              url.indexOf('/s/ac/') >= 0) &&\n            erro === 'CAPTCHA_EXPIROU'\n          ) {\n            history.push('/nao-autorizado');\n          }\n        } else if (status === 403) {\n          history.push('/inscricoes-encerradas');\n        }\n      }\n      return Promise.reject(erro);\n    },\n  );\n  axios.interceptors.request.use(\n    (config) => ({\n      ...config,\n      headers: {\n        ...config.headers,\n        'x-auth-token': store.getState().auth.token,\n      },\n    }),\n    (error) => Promise.reject(error),\n  );\n};\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: stretch;\n  background: #2d2d2d;\n  /* flex: 1; */\n  /* border: solid red; */\n  width: 80%;\n  height: 80%;\n  margin: auto;\n  > div {\n    margin: 8px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-self: stretch;\n  flex: 1;\n  /* overflow: hidden; */\n`;\n\nexport const Title = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  align-self: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 4;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CountdownContainer = styled.div`\n  margin: 40px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex: 1;\n  margin: 20px;\n  align-items: center;\n  justify-content: center;\n\n  > div {\n    margin: 0 12px;\n    padding: 8px 16px;\n\n    svg {\n      transition: all 0.2s ease-in-out;\n      margin-right: 8px;\n      font-size: 20px;\n    }\n    :hover {\n      svg {\n        color: #ea3856;\n      }\n    }\n  }\n`;\n","import styled from 'styles';\n\ntype Props = {\n  flex?: 'none' | number;\n  background?: string;\n};\nexport const Container = styled.div<Props>`\n  display: flex;\n  flex-direction: column;\n  border-radius: 4px;\n  /* padding: 20px; */\n  box-shadow: 0 0 10px 8px rgba(0, 0, 0, 0.5);\n  background: ${({ background = 'linear-gradient(#8da0ad, #64737a)' }) =>\n    background};\n  flex: ${({ flex = 'none' }) => flex};\n`;\n","import React from 'react';\n\nimport { Container } from './styled';\n\ntype Props = {\n  flex?: 'none' | number;\n  background?: string;\n};\n\nclass Card extends React.Component<Props> {\n  render() {\n    const { children, flex, background } = this.props;\n\n    return (\n      <Container flex={flex} background={background}>\n        {children}\n      </Container>\n    );\n  }\n}\n\nexport default Card;\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: rgba(0, 0, 0, 0.5);\n  > span {\n    margin-bottom: 20px;\n    font-size: 20px;\n    min-width: 4px;\n  }\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  > span {\n    margin-top: 8px;\n    font-size: 12px;\n    /* font-weight: bold; */\n    text-align: center;\n  }\n  // border: solid blue;\n`;\n\nexport const FlipPanel = styled.div`\n  display: flex;\n  background: #f2f2f2;\n  font-weight: 300;\n  font-size: 42px;\n  line-height: 60px;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: #ea3856;\n  width: 60px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.25);\n\n  margin: 0 5px;\n  border-radius: 4px;\n\n  animation: flip-horizontal-bottom 0.4s cubic-bezier(0.455, 0.03, 0.515, 0.955)\n    both;\n\n  @keyframes flip-horizontal-bottom {\n    0% {\n      transform: rotateX(180deg);\n      opacity: 0;\n    }\n    100% {\n      transform: rotateX(0deg);\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { ItemContainer, FlipPanel } from './styled';\n\ntype Props = {\n  label: string;\n  value: number;\n};\n\nexport default class extends React.Component<Props> {\n  render() {\n    const { label, value } = this.props;\n    return (\n      <ItemContainer>\n        <FlipPanel key={value}>{value < 10 ? `0${value}` : value}</FlipPanel>\n        <span>{label}</span>\n      </ItemContainer>\n    );\n  }\n}\n","import React from 'react';\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\n\nimport CountdownItem from './CountdownItem';\n\nimport { Container } from './styled';\n\ntype Props = {\n  onComplete: () => void;\n};\n\nclass CountdownComponent extends React.Component<Props> {\n  renderCountdown = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed,\n  }: CountdownRenderProps) => {\n    if (completed) {\n      return (\n        <p>\n          Você já pode iniciar o exame. <b>Boa prova!</b>\n        </p>\n      );\n    }\n    return (\n      <Container>\n        {days > 0 && (\n          <>\n            <CountdownItem label=\"DIAS\" value={days} />\n            <span />\n          </>\n        )}\n        <CountdownItem label=\"HORAS\" value={hours} />\n        <span>:</span>\n        <CountdownItem label=\"MIN\" value={minutes} />\n        {days === 0 && (\n          <>\n            <span>:</span>\n            <CountdownItem label=\"SEG\" value={seconds} />\n          </>\n        )}\n      </Container>\n    );\n  };\n\n  render() {\n    const { onComplete } = this.props;\n    return (\n      <Countdown\n        date={new Date()}\n        now={() => Date.now() - 10000}\n        renderer={this.renderCountdown}\n        onComplete={onComplete}\n      />\n    );\n  }\n}\n\nexport default CountdownComponent;\n","import styled from 'styles';\nimport { motion, AnimationProps } from 'framer-motion';\n\ntype Props = {\n  disabled?: boolean;\n} & AnimationProps;\nexport const Container = styled(motion.div)<Props>`\n  display: flex;\n  flex-direction: row;\n  cursor: pointer;\n  padding: 8px;\n  background: whitesmoke;\n  margin: 4px;\n  border-radius: 4px;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0 4px 0px rgba(0, 0, 0, 0.5);\n  user-select: none;\n  transition: all 0.1s ease-in-out;\n  text-transform: uppercase;\n  color: #555;\n\n  :active {\n    background: white;\n    box-shadow: 0 0 4px 0px rgba(0, 0, 0, 0.2);\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styled';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nclass Button extends React.Component<Props> {\n  render() {\n    const { onClick, children, disabled } = this.props;\n\n    return (\n      <Container\n        onClick={onClick}\n        disabled={disabled}\n        initial={{\n          opacity: 0,\n          y: 10,\n        }}\n        animate={{\n          opacity: 1,\n          y: 0,\n        }}\n        exit={{\n          opacity: 0,\n          y: 10,\n        }}\n      >\n        {children}\n      </Container>\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\n\nimport { AnimatePresence } from 'framer-motion';\nimport {\n  Container,\n  Content,\n  CountdownContainer,\n  ButtonContainer,\n  Title,\n  Header,\n} from './styled';\nimport Card from 'components/Card';\nimport Countdown from 'components/Countdown';\nimport { FaChalkboardTeacher, FaRegPlayCircle } from 'react-icons/fa';\nimport Button from 'components/Button';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Logo from 'components/Logo';\nimport Breadcrumbs from 'components/Breadcrumbs';\n\ntype Props = {} & RouteComponentProps;\ntype State = {\n  ready: boolean;\n};\n\nclass WelcomeRoute extends React.Component<Props, State> {\n  state: State = {\n    ready: false,\n  };\n\n  handleComplete = () => {\n    this.setState({\n      ready: true,\n    });\n  };\n\n  handleTutorialClick = () => {\n    console.log('tutorial');\n  };\n\n  handleStartClick = () => {\n    const { history } = this.props;\n    history.push('/prova');\n    console.log('start');\n  };\n\n  render() {\n    const { ready } = this.state;\n\n    return (\n      <Container>\n        <Card flex={1} background=\"linear-gradient(#ccc, #777)\">\n          <Header>\n            <Logo />\n          </Header>\n        </Card>\n        <Card flex={9} background=\"linear-gradient(#fff, #ccc)\">\n          <Title>\n            <h2>\n              Olá <i>Fabiano Maeda</i>, bem vindo!\n            </h2>\n          </Title>\n          <Content>\n            {!!ready ? (\n              <>\n                <p>\n                  Você já pode iniciar o exame. <b>Boa prova!</b>\n                </p>\n              </>\n            ) : (\n              <>\n                <p>Sua prova será iniciada em...</p>\n                <CountdownContainer>\n                  <Countdown onComplete={this.handleComplete} />\n                </CountdownContainer>\n                <p>\n                  Enquanto isso, você pode se familiarizar com o sistema através\n                  do Tutorial.\n                </p>\n              </>\n            )}\n          </Content>\n          <ButtonContainer>\n            <AnimatePresence>\n              <Button onClick={this.handleTutorialClick} key=\"tutorial\">\n                <FaChalkboardTeacher /> Tutorial\n              </Button>\n              {!!ready && (\n                <Button onClick={this.handleStartClick} key=\"start\">\n                  <FaRegPlayCircle /> Iniciar Prova\n                </Button>\n              )}\n            </AnimatePresence>\n          </ButtonContainer>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nexport default WelcomeRoute;\n"],"sourceRoot":""}